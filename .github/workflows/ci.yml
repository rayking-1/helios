name: Helios Adaptive Planner CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov
        pip install -e .

    - name: Install Playwright browsers
      run: |
        pip install playwright
        playwright install --with-deps chromium

    - name: Run backend tests
      env:
        PYTHONPATH: ${{ github.workspace }}
      run: |
        cd backend
        pytest --cov=. --cov-report=xml

    - name: Upload coverage report
      uses: codecov/codecov-action@v3
      with:
        file: ./backend/coverage.xml
        fail_ci_if_error: true

  frontend-tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: './helios-frontend/package-lock.json'

    - name: Install frontend dependencies
      run: |
        cd helios-frontend
        npm ci

    - name: Run frontend tests
      run: |
        cd helios-frontend
        npm test

    - name: Build frontend
      run: |
        cd helios-frontend
        npm run build

    - name: Archive frontend build
      uses: actions/upload-artifact@v3
      with:
        name: frontend-build
        path: helios-frontend/dist

  deploy-dev:
    needs: [backend-tests, frontend-tests]
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Registry
      uses: docker/login-action@v2
      with:
        registry: ${{ secrets.DOCKER_REGISTRY }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push backend image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_REGISTRY }}/helios-backend:dev
        
    - name: Download frontend build artifact
      uses: actions/download-artifact@v3
      with:
        name: frontend-build
        path: helios-frontend/dist

    - name: Build and push frontend image
      uses: docker/build-push-action@v4
      with:
        context: ./helios-frontend
        file: ./helios-frontend/Dockerfile.frontend
        push: true
        tags: ${{ secrets.DOCKER_REGISTRY }}/helios-frontend:dev

    - name: Deploy to development environment
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.DEV_SSH_HOST }}
        username: ${{ secrets.DEV_SSH_USERNAME }}
        key: ${{ secrets.DEV_SSH_PRIVATE_KEY }}
        script: |
          cd /opt/helios
          docker-compose pull
          docker-compose up -d

  deploy-prod:
    needs: [backend-tests, frontend-tests]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: production
    steps:
    - uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Registry
      uses: docker/login-action@v2
      with:
        registry: ${{ secrets.DOCKER_REGISTRY }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push backend image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_REGISTRY }}/helios-backend:latest,${{ secrets.DOCKER_REGISTRY }}/helios-backend:${{ github.sha }}
        
    - name: Download frontend build artifact
      uses: actions/download-artifact@v3
      with:
        name: frontend-build
        path: helios-frontend/dist

    - name: Build and push frontend image
      uses: docker/build-push-action@v4
      with:
        context: ./helios-frontend
        file: ./helios-frontend/Dockerfile.frontend
        push: true
        tags: ${{ secrets.DOCKER_REGISTRY }}/helios-frontend:latest,${{ secrets.DOCKER_REGISTRY }}/helios-frontend:${{ github.sha }}

    - name: Deploy to production environment
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.PROD_SSH_HOST }}
        username: ${{ secrets.PROD_SSH_USERNAME }}
        key: ${{ secrets.PROD_SSH_PRIVATE_KEY }}
        script: |
          cd /opt/helios
          docker-compose pull
          docker-compose up -d 
 
 