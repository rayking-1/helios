name: Helios AG2 Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  # 每天午夜运行端到端测试
  schedule:
    - cron: '0 0 * * *'

jobs:
  unit-and-integration-tests:
    name: Unit & Integration Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r backend/requirements.txt
        pip install pytest pytest-cov
    
    - name: Run unit tests
      run: |
        cd backend
        python -m pytest tests/ -v --cov=. --cov-report=xml
    
    - name: Run integration tests
      run: |
        cd backend
        python -m pytest tests/integration/ -v
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./backend/coverage.xml
        fail_ci_if_error: false
  
  e2e-tests:
    name: End-to-End Tests
    # 仅在主分支推送、定时任务或显式请求时运行
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' || github.event_name == 'schedule' || contains(github.event.pull_request.labels.*.name, 'run-e2e-tests')
    runs-on: ubuntu-latest
    needs: unit-and-integration-tests
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'frontend/package-lock.json'
    
    - name: Install backend dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r backend/requirements.txt
    
    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci
    
    - name: Install Playwright
      run: |
        cd frontend
        npx playwright install --with-deps
    
    - name: Start backend server
      run: |
        cd backend
        python main.py &
        sleep 5  # 等待服务器启动
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        DATABASE_URL: ${{ secrets.TEST_DATABASE_URL }}
    
    - name: Start frontend server
      run: |
        cd frontend
        npm run build
        npm run preview &
        sleep 5  # 等待服务器启动
    
    - name: Run E2E tests
      run: |
        cd backend
        python -m pytest tests/e2e/ -v
      env:
        TEST_APP_URL: "http://localhost:4173"  # Vite preview server URL
    
    - name: Archive test artifacts
      if: success() || failure()
      uses: actions/upload-artifact@v3
      with:
        name: e2e-test-results
        path: |
          backend/tests/e2e/screenshots/
          backend/tests/e2e/videos/

  lint:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install linting dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black mypy
    
    - name: Lint with flake8
      run: |
        flake8 backend/ --count --select=E9,F63,F7,F82 --show-source --statistics
    
    - name: Check formatting with black
      run: |
        black --check backend/
    
    - name: Type check with mypy
      run: |
        mypy backend/ --ignore-missing-imports 